<#@ template debug="true" hostspecific="true" language="C#" inherits="NRestGen.TextTemplate.NRestGenTemplate" #>
<#@ output extension=".log" #>
<#@ include file="NRestGen.ResourceModel.ttinclude" #>
<#@ include file="NRestGen.ResourceModelBuilder.ttinclude" #>
<#@ include file="NRestGen.Controllers.ttinclude" #>
<#@ include file="NRestGen.Controllers.Handlers.ttinclude" #>
<#@ include file="NRestGen.Request.ttinclude" #>
<#@ include file="NRestGen.Startup.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="$(TargetDir)NRestGen.TextTemplate.dll" #>
<#@ assembly name="EnvDTE"#>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="NRestGen.TextTemplate" #>
/**********************************************
<#
    // >> Note that TextTemplates in Visual Studio are executed on .NET4!
    // >> Make sure the `TextTemplatingFileGenerator` is set as `Custom Tool` in this file's properties (F4).

    // change this if your file name is different.
    const string ResourceModelFileName = "ResourceModel.yaml";

  try {
    var dte = GetDevEnv(Host);
    Initialize(dte, Host, ResourceModelFileName);
#>
<# GenerateResourceModel(); #>
<# GenerateResourceModelBuilder(); #>
<# GenerateControllers(); #>
<# if (!UseMediatr) {
      GenerateControllerHandlers();
   } // if-!UseMediatr #>
<# GenerateRequest(); #>
<# GenerateStartupExtensions(); #>
<# Process(); #>
<# } catch(Exception e) { #>
Error:
<#=e.ToString()#>
<# 
  Error(e.ToString());
  } 
#>



Use the NuGet Package Manager to install the following packages:
----------------------------------------------------------------
<#
    if (UseMediatr) {
#>

Mediatr ----------------
- Mediatr (Jimmy Bogard) >= v8.1.0
- Mediatr.Extensions.Microsoft.DependencyInjection (Jimmy Bogard) >= v8.1.0
<#
    }
    if (UseOData) {
#>

OData ------------------
- Microsoft.AspNetCore.OData (Microsoft) >= v7.4.1
<#
    }
#>

*******************************************/
<#+ 
private bool UseMediatr
{
    get { return ResourceModel?.Settings?.Mediatr != null; }
}
private bool UseOData
{
    get { return ResourceModel?.Settings?.Odata != null; }
}
private bool UseODataQueryable
{
    get { return UseOData && ResourceModel.Settings.Odata.Queryable; }
}
private bool UseODataNotQueryable
{
    get { return UseOData && !ResourceModel.Settings.Odata.Queryable; }
}
#>