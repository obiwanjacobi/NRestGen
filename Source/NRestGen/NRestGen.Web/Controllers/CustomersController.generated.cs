// This code is generated by NRestGen v1.0.0.
// Any changes to this file will be overwritten when regenerated.
// Generated at 2020-09-10 12:51:04
using MediatR;
using Microsoft.AspNet.OData;
using Microsoft.AspNet.OData.Query;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Linq;
using System.Threading.Tasks;
using NRestGen.Web.ResourceModel;

namespace NRestGen.Web.Controllers
{
    /// <summary>
    /// Handles resource requests for the Customer type.
    /// </summary>
    [ApiController]
    [ApiVersion("1")]
    //[Route("api/v{v:apiVersion}/[controller]")]
    [Route("api/[controller]")]
    public partial class CustomersController : ControllerBase
    {
        private readonly IMediator _mediator;

        public CustomersController(IMediator mediator)
        {
            _mediator = mediator ?? throw new ArgumentNullException(nameof(mediator));
        }

        [HttpHeadGet("{id?}")]
        public async Task<IActionResult> Get(ODataQueryOptions<Customer> options, int? id = null)
        {
            var request = new GetRequest<Customer>(options, id.GetValueOrDefault());
            var response = await _mediator.Send(request);
            return Ok(response.Results);
        }
        
        [HttpHeadGet("{id}/Orders")]
        public async Task<IActionResult> GetOrders(ODataQueryOptions<Order> options, int id)
        {
            var request = new GetRequest<Order>(options)
            {
                ParentId = new ResourceIdentifier(typeof(Customer), id)
            };
            var response = await _mediator.Send(request);
            return Ok(response.Results);
        }
    }
}
